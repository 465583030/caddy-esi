// Code generated by protoc-gen-go.
// source: grpc_data.proto
// DO NOT EDIT!

/*
Package esigrpc is a generated protocol buffer package.

It is generated from these files:
	grpc_data.proto

It has these top-level messages:
	ResourceArg
	HeaderBody
	MapValues
*/
package esigrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResourceArg struct {
	ExternalReq       *ResourceArg_ExternalReq `protobuf:"bytes,1,opt,name=external_req,json=externalReq" json:"external_req,omitempty"`
	Url               string                   `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Timeout           int64                    `protobuf:"varint,3,opt,name=timeout" json:"timeout,omitempty"`
	MaxBodySize       uint64                   `protobuf:"varint,34,opt,name=max_body_size,json=maxBodySize" json:"max_body_size,omitempty"`
	Ttl               uint64                   `protobuf:"varint,5,opt,name=ttl" json:"ttl,omitempty"`
	Key               string                   `protobuf:"bytes,6,opt,name=key" json:"key,omitempty"`
	ForwardHeaders    string                   `protobuf:"bytes,7,opt,name=forward_headers,json=forwardHeaders" json:"forward_headers,omitempty"`
	ForwardHeadersAll bool                     `protobuf:"varint,8,opt,name=forward_headers_all,json=forwardHeadersAll" json:"forward_headers_all,omitempty"`
	ReturnHeaders     []string                 `protobuf:"bytes,9,rep,name=return_headers,json=returnHeaders" json:"return_headers,omitempty"`
	ReturnHeadersAll  bool                     `protobuf:"varint,10,opt,name=return_headers_all,json=returnHeadersAll" json:"return_headers_all,omitempty"`
}

func (m *ResourceArg) Reset()                    { *m = ResourceArg{} }
func (m *ResourceArg) String() string            { return proto.CompactTextString(m) }
func (*ResourceArg) ProtoMessage()               {}
func (*ResourceArg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ResourceArg) GetExternalReq() *ResourceArg_ExternalReq {
	if m != nil {
		return m.ExternalReq
	}
	return nil
}

func (m *ResourceArg) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ResourceArg) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ResourceArg) GetMaxBodySize() uint64 {
	if m != nil {
		return m.MaxBodySize
	}
	return 0
}

func (m *ResourceArg) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *ResourceArg) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ResourceArg) GetForwardHeaders() string {
	if m != nil {
		return m.ForwardHeaders
	}
	return ""
}

func (m *ResourceArg) GetForwardHeadersAll() bool {
	if m != nil {
		return m.ForwardHeadersAll
	}
	return false
}

func (m *ResourceArg) GetReturnHeaders() []string {
	if m != nil {
		return m.ReturnHeaders
	}
	return nil
}

func (m *ResourceArg) GetReturnHeadersAll() bool {
	if m != nil {
		return m.ReturnHeadersAll
	}
	return false
}

type ResourceArg_ExternalReq struct {
	Method           string       `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Url              string       `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Proto            string       `protobuf:"bytes,3,opt,name=proto" json:"proto,omitempty"`
	ProtoMajor       int32        `protobuf:"varint,4,opt,name=proto_major,json=protoMajor" json:"proto_major,omitempty"`
	ProtoMinor       int32        `protobuf:"varint,5,opt,name=proto_minor,json=protoMinor" json:"proto_minor,omitempty"`
	Header           []*MapValues `protobuf:"bytes,6,rep,name=header" json:"header,omitempty"`
	ContentLength    int64        `protobuf:"varint,7,opt,name=ContentLength" json:"ContentLength,omitempty"`
	TransferEncoding []string     `protobuf:"bytes,8,rep,name=transfer_encoding,json=transferEncoding" json:"transfer_encoding,omitempty"`
	Close            bool         `protobuf:"varint,9,opt,name=close" json:"close,omitempty"`
	Host             string       `protobuf:"bytes,10,opt,name=host" json:"host,omitempty"`
	Form             []*MapValues `protobuf:"bytes,11,rep,name=form" json:"form,omitempty"`
	PostForm         []*MapValues `protobuf:"bytes,12,rep,name=post_form,json=postForm" json:"post_form,omitempty"`
	RemoteAddr       string       `protobuf:"bytes,13,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	RequestUri       string       `protobuf:"bytes,14,opt,name=request_uri,json=requestUri" json:"request_uri,omitempty"`
}

func (m *ResourceArg_ExternalReq) Reset()                    { *m = ResourceArg_ExternalReq{} }
func (m *ResourceArg_ExternalReq) String() string            { return proto.CompactTextString(m) }
func (*ResourceArg_ExternalReq) ProtoMessage()               {}
func (*ResourceArg_ExternalReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *ResourceArg_ExternalReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *ResourceArg_ExternalReq) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ResourceArg_ExternalReq) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *ResourceArg_ExternalReq) GetProtoMajor() int32 {
	if m != nil {
		return m.ProtoMajor
	}
	return 0
}

func (m *ResourceArg_ExternalReq) GetProtoMinor() int32 {
	if m != nil {
		return m.ProtoMinor
	}
	return 0
}

func (m *ResourceArg_ExternalReq) GetHeader() []*MapValues {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ResourceArg_ExternalReq) GetContentLength() int64 {
	if m != nil {
		return m.ContentLength
	}
	return 0
}

func (m *ResourceArg_ExternalReq) GetTransferEncoding() []string {
	if m != nil {
		return m.TransferEncoding
	}
	return nil
}

func (m *ResourceArg_ExternalReq) GetClose() bool {
	if m != nil {
		return m.Close
	}
	return false
}

func (m *ResourceArg_ExternalReq) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ResourceArg_ExternalReq) GetForm() []*MapValues {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *ResourceArg_ExternalReq) GetPostForm() []*MapValues {
	if m != nil {
		return m.PostForm
	}
	return nil
}

func (m *ResourceArg_ExternalReq) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *ResourceArg_ExternalReq) GetRequestUri() string {
	if m != nil {
		return m.RequestUri
	}
	return ""
}

// HeaderBody a return value like in the backend package but here the three
// return arguments are combined into one struct. If error is empty, then no
// error has happend.
type HeaderBody struct {
	Header []*MapValues `protobuf:"bytes,1,rep,name=header" json:"header,omitempty"`
	Body   []byte       `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Error  string       `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *HeaderBody) Reset()                    { *m = HeaderBody{} }
func (m *HeaderBody) String() string            { return proto.CompactTextString(m) }
func (*HeaderBody) ProtoMessage()               {}
func (*HeaderBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HeaderBody) GetHeader() []*MapValues {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HeaderBody) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *HeaderBody) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// MapValues is equivalent to map[string][]string used in url.Values and
// http.Header but for the sake of the protoc compiler we use here a slice which
// is easier to handle than a new map type.
type MapValues struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapValues) Reset()                    { *m = MapValues{} }
func (m *MapValues) String() string            { return proto.CompactTextString(m) }
func (*MapValues) ProtoMessage()               {}
func (*MapValues) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MapValues) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapValues) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*ResourceArg)(nil), "esigrpc.ResourceArg")
	proto.RegisterType((*ResourceArg_ExternalReq)(nil), "esigrpc.ResourceArg.ExternalReq")
	proto.RegisterType((*HeaderBody)(nil), "esigrpc.HeaderBody")
	proto.RegisterType((*MapValues)(nil), "esigrpc.MapValues")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HeaderBodyService service

type HeaderBodyServiceClient interface {
	GetHeaderBody(ctx context.Context, in *ResourceArg, opts ...grpc.CallOption) (*HeaderBody, error)
}

type headerBodyServiceClient struct {
	cc *grpc.ClientConn
}

func NewHeaderBodyServiceClient(cc *grpc.ClientConn) HeaderBodyServiceClient {
	return &headerBodyServiceClient{cc}
}

func (c *headerBodyServiceClient) GetHeaderBody(ctx context.Context, in *ResourceArg, opts ...grpc.CallOption) (*HeaderBody, error) {
	out := new(HeaderBody)
	err := grpc.Invoke(ctx, "/esigrpc.HeaderBodyService/GetHeaderBody", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HeaderBodyService service

type HeaderBodyServiceServer interface {
	GetHeaderBody(context.Context, *ResourceArg) (*HeaderBody, error)
}

func RegisterHeaderBodyServiceServer(s *grpc.Server, srv HeaderBodyServiceServer) {
	s.RegisterService(&_HeaderBodyService_serviceDesc, srv)
}

func _HeaderBodyService_GetHeaderBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeaderBodyServiceServer).GetHeaderBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esigrpc.HeaderBodyService/GetHeaderBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeaderBodyServiceServer).GetHeaderBody(ctx, req.(*ResourceArg))
	}
	return interceptor(ctx, in, info, handler)
}

var _HeaderBodyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "esigrpc.HeaderBodyService",
	HandlerType: (*HeaderBodyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHeaderBody",
			Handler:    _HeaderBodyService_GetHeaderBody_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_data.proto",
}

func init() { proto.RegisterFile("grpc_data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 612 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x5b, 0x4f, 0xdb, 0x4c,
	0x10, 0x86, 0x3f, 0x7f, 0x39, 0x10, 0x8f, 0x09, 0x87, 0x05, 0x55, 0x5b, 0x6e, 0xb0, 0xa2, 0x1e,
	0xac, 0x16, 0xb9, 0x12, 0xdc, 0xf6, 0x26, 0x20, 0x7a, 0x90, 0x8a, 0x44, 0x17, 0xb5, 0xb7, 0xd6,
	0x62, 0x4f, 0x12, 0x17, 0xdb, 0x1b, 0xc6, 0x6b, 0x4a, 0xf8, 0x89, 0xbd, 0xed, 0x1f, 0xaa, 0x76,
	0xed, 0x9c, 0x2a, 0x50, 0xef, 0x66, 0xde, 0x79, 0x3c, 0xbb, 0x7e, 0x67, 0x07, 0xb6, 0xc7, 0x34,
	0x8d, 0xa3, 0x44, 0x6a, 0x19, 0x4e, 0x49, 0x69, 0xc5, 0x36, 0xb0, 0x4c, 0x8d, 0x36, 0xf8, 0xd5,
	0x05, 0x4f, 0x60, 0xa9, 0x2a, 0x8a, 0x71, 0x48, 0x63, 0x76, 0x06, 0x9b, 0x78, 0xaf, 0x91, 0x0a,
	0x99, 0x45, 0x84, 0xb7, 0xdc, 0xf1, 0x9d, 0xc0, 0x3b, 0xf6, 0xc3, 0x86, 0x0f, 0x57, 0xd8, 0xf0,
	0xbc, 0x01, 0x05, 0xde, 0x0a, 0x0f, 0x97, 0x09, 0xdb, 0x81, 0x56, 0x45, 0x19, 0xff, 0xdf, 0x77,
	0x02, 0x57, 0x98, 0x90, 0x71, 0xd8, 0xd0, 0x69, 0x8e, 0xaa, 0xd2, 0xbc, 0xe5, 0x3b, 0x41, 0x4b,
	0xcc, 0x53, 0x36, 0x80, 0x7e, 0x2e, 0xef, 0xa3, 0x6b, 0x95, 0xcc, 0xa2, 0x32, 0x7d, 0x40, 0x3e,
	0xf0, 0x9d, 0xa0, 0x2d, 0xbc, 0x5c, 0xde, 0x9f, 0xaa, 0x64, 0x76, 0x95, 0x3e, 0xa0, 0xe9, 0xa7,
	0x75, 0xc6, 0x3b, 0xb6, 0x62, 0x42, 0xa3, 0xdc, 0xe0, 0x8c, 0x77, 0xeb, 0x13, 0x6e, 0x70, 0xc6,
	0x5e, 0xc3, 0xf6, 0x48, 0xd1, 0x4f, 0x49, 0x49, 0x34, 0x41, 0x99, 0x20, 0x95, 0x7c, 0xc3, 0x56,
	0xb7, 0x1a, 0xf9, 0x53, 0xad, 0xb2, 0x10, 0xf6, 0xfe, 0x02, 0x23, 0x99, 0x65, 0xbc, 0xe7, 0x3b,
	0x41, 0x4f, 0xec, 0xae, 0xc3, 0xc3, 0x2c, 0x63, 0x2f, 0x61, 0x8b, 0x50, 0x57, 0x54, 0x2c, 0xfa,
	0xba, 0x7e, 0x2b, 0x70, 0x45, 0xbf, 0x56, 0xe7, 0x6d, 0x8f, 0x80, 0xad, 0x63, 0xb6, 0x2b, 0xd8,
	0xae, 0x3b, 0x6b, 0xe8, 0x30, 0xcb, 0x0e, 0x7e, 0xb7, 0xc0, 0x5b, 0xb1, 0x8f, 0x3d, 0x83, 0x6e,
	0x8e, 0x7a, 0xa2, 0x12, 0x6b, 0xb8, 0x2b, 0x9a, 0xec, 0x11, 0x27, 0xf7, 0xa1, 0x63, 0x47, 0x68,
	0x7d, 0x74, 0x45, 0x9d, 0xb0, 0x43, 0xf0, 0x6c, 0x10, 0xe5, 0xf2, 0x87, 0x22, 0xde, 0xf6, 0x9d,
	0xa0, 0x23, 0xc0, 0x4a, 0x17, 0x46, 0x59, 0x01, 0xd2, 0x42, 0x91, 0xb5, 0x72, 0x01, 0x18, 0x85,
	0xbd, 0x81, 0x6e, 0x7d, 0x71, 0xde, 0xf5, 0x5b, 0x81, 0x77, 0xcc, 0x16, 0x23, 0xbf, 0x90, 0xd3,
	0xef, 0x32, 0xab, 0xb0, 0x14, 0x0d, 0xc1, 0x5e, 0x40, 0xff, 0x4c, 0x15, 0x1a, 0x0b, 0xfd, 0x05,
	0x8b, 0xb1, 0x9e, 0x58, 0xa7, 0x5b, 0x62, 0x5d, 0x64, 0x6f, 0x61, 0x57, 0x93, 0x2c, 0xca, 0x11,
	0x52, 0x84, 0x45, 0xac, 0x92, 0xb4, 0x18, 0xf3, 0x9e, 0xf5, 0x6e, 0x67, 0x5e, 0x38, 0x6f, 0x74,
	0xf3, 0x5b, 0x71, 0xa6, 0x4a, 0xe4, 0xae, 0x75, 0xac, 0x4e, 0x18, 0x83, 0xf6, 0x44, 0x95, 0xda,
	0xda, 0xe8, 0x0a, 0x1b, 0xb3, 0x57, 0xd0, 0x1e, 0x29, 0xca, 0xb9, 0xf7, 0xe4, 0x35, 0x6d, 0x9d,
	0xbd, 0x03, 0x77, 0xaa, 0x4a, 0x1d, 0x59, 0x78, 0xf3, 0x49, 0xb8, 0x67, 0xa0, 0x0f, 0xe6, 0x83,
	0x43, 0xf0, 0x08, 0x73, 0xa5, 0x31, 0x92, 0x49, 0x42, 0xbc, 0x6f, 0xcf, 0x84, 0x5a, 0x1a, 0x26,
	0x09, 0xd5, 0xc0, 0x6d, 0x85, 0xa5, 0x8e, 0x2a, 0x4a, 0xf9, 0xd6, 0x1c, 0xb0, 0xd2, 0x37, 0x4a,
	0x07, 0xd7, 0x00, 0xf5, 0x8c, 0xcd, 0xcb, 0x5d, 0x71, 0xd4, 0xf9, 0xa7, 0xa3, 0x0c, 0xda, 0x66,
	0x03, 0xec, 0xa0, 0x37, 0x85, 0x8d, 0x8d, 0x25, 0x48, 0xa4, 0x68, 0x3e, 0x69, 0x9b, 0x0c, 0x4e,
	0xc0, 0x5d, 0x7c, 0x3e, 0x5f, 0x03, 0x67, 0xb9, 0x06, 0xfb, 0xd0, 0xb9, 0x33, 0xb5, 0xe6, 0xc9,
	0xd4, 0xc9, 0xf1, 0x57, 0xd8, 0x5d, 0x5e, 0xec, 0x0a, 0xe9, 0x2e, 0x8d, 0x91, 0xbd, 0x87, 0xfe,
	0x47, 0xd4, 0x2b, 0x17, 0xde, 0x7f, 0x6c, 0xcb, 0x0f, 0xf6, 0x16, 0xea, 0x12, 0x1d, 0xfc, 0x77,
	0x7a, 0x04, 0xcf, 0x47, 0x79, 0x58, 0xc6, 0x93, 0x2a, 0x97, 0xf1, 0x04, 0x69, 0x94, 0x87, 0xb1,
	0x4c, 0x92, 0x99, 0xa1, 0x4f, 0xfb, 0x67, 0x26, 0x3c, 0xbf, 0xfa, 0x7c, 0x69, 0x1e, 0xd8, 0xa5,
	0x73, 0xdd, 0xb5, 0x2f, 0xed, 0xe4, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x47, 0x2b, 0xe3,
	0x89, 0x04, 0x00, 0x00,
}
